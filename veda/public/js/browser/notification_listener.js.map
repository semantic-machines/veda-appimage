{"version":3,"sources":["../../../source-web/js/browser/notification_listener.js"],"names":["veda","Util","IndividualModel","on","checkNotification","browserNotificationList","clientNotification","JSON","parse","localStorage","error","serverNotificationList","get","map","item","id","areEqual","length","reduce","p","notification_uri","then","indexOf","notification","load","properties","audience","data","sort","user","memberOf","audience_uri","memberOf_uri","i","j","confirm","confirmed","stringify","hasValue","script","toString","fn","Function","console","log","Promise","resolve","call"],"mappings":"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","sourcesContent":["// Listen to client notifications\n\nimport veda from '../common/veda.js';\n\nimport Util from '../common/util.js';\n\nimport IndividualModel from '../common/individual_model.js';\n\nveda.on('started', () => {\n  const clientNotification = new IndividualModel('cfg:ClientNotification');\n  clientNotification.load().then((clientNotification) => {\n    clientNotification.on('afterReset', checkNotification);\n    checkNotification.call(clientNotification);\n  });\n\n  /**\n   * Check received notification\n   * @this Individual\n   * @return {void}\n   */\n  function checkNotification() {\n    const clientNotification = this;\n    let browserNotificationList;\n    try {\n      browserNotificationList = JSON.parse(localStorage.clientNotification);\n    } catch (error) {\n      browserNotificationList = [];\n    }\n    const serverNotificationList = clientNotification.get('rdf:value').map((item) => item.id);\n    if (!Util.areEqual(browserNotificationList, serverNotificationList) && serverNotificationList.length) {\n      serverNotificationList.reduce((p, notification_uri) => p.then(() => {\n        if (browserNotificationList.indexOf(notification_uri) >= 0) {\n          return;\n        }\n        const notification = new IndividualModel(notification_uri);\n        return notification.load().then((notification) => (notification.properties['v-s:newsAudience'] || []).map((audience) => audience.data)).then((audience) => {\n          audience = audience.sort();\n          return veda.user.memberOf().then((memberOf) => {\n            memberOf = memberOf.sort();\n            let i = 0;\n            let j = 0;\n            let audience_uri; let memberOf_uri;\n            while ((audience_uri = audience[i]) && (memberOf_uri = memberOf[j])) {\n              if (memberOf_uri < audience_uri) {\n                j++;\n              } else if (memberOf_uri > audience_uri) {\n                i++;\n              } else {\n                return Util.confirm(notification).then((confirmed) => {\n                  if (confirmed) {\n                    localStorage.clientNotification = JSON.stringify(serverNotificationList);\n                    if (notification.hasValue('v-s:script')) {\n                      const script = notification.get('v-s:script')[0].toString();\n                      const fn = new Function('veda', script);\n                      return fn(veda);\n                    }\n                  }\n                });\n              }\n            }\n          });\n        });\n      }).catch(console.log), Promise.resolve());\n    } else {\n      localStorage.clientNotification = JSON.stringify(serverNotificationList);\n    }\n  }\n});\n"],"file":"notification_listener.js"}