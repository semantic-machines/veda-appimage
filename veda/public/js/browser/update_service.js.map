{"version":3,"sources":["../../../source-web/js/browser/update_service.js"],"names":["UpdateService","initSocket","Backend","reset_individual","veda","ticket","then","ccusPortCfg","ccusPort","data","protocol","window","location","port","address","hostname","socket","WebSocket","onopen","openedHandler","onclose","closedHandler","onerror","errorHandler","onmessage","messageHandler","receiveMessage","sendMessage","self","msg","indexOf","readyState","send","buffer","push","socketTimeout","setTimeout","message","join","socketDelay","lastPing","Date","now","uris","substr","length","split","i","tmp","uri","updateCounter","parseInt","individual","IndividualModel","hasValue","list","action","call","reset","error","console","log","event","reconnectDelay","reconnectDelayInitial","target","url","restore","trigger","pingInterval","setInterval","pingTimeout","clearInterval","close","reconnectDelayLimit","reconnectDelayFactor","prototype","_singletonInstance","Math","round","random","proto","subscribe","subscribeCounter","load","get","unsubscribe","Object","hasOwnProperty"],"mappings":"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","sourcesContent":["// Update service for individuals that were changed on server\n\n'use strict';\n\nimport veda from '../common/veda.js';\n\nimport IndividualModel from '../common/individual_model.js';\n\nimport Backend from '../common/backend.js';\n\nexport default UpdateService;\n\n/**\n * Client in memory cache update service singleton constructor\n * @return {Promise} update service instance promise\n */\nfunction UpdateService() {\n  const self = this;\n\n  // Singleton pattern\n  if (UpdateService.prototype._singletonInstance) {\n    return UpdateService.prototype._singletonInstance;\n  }\n\n  this.list = {};\n  const reconnectDelayInitial = 2500 + Math.round(Math.random() * 2500); // 2.5 - 5 sec\n  const reconnectDelayFactor = 1.1;\n  const reconnectDelayLimit = 5 * 60 * 1000; // 5 min\n  const pingTimeout = 5000;\n\n  let buffer = [];\n  const socketDelay = 1000;\n  let socketTimeout;\n  let reconnectDelay = reconnectDelayInitial;\n  let lastPing = Date.now();\n  let pingInterval;\n\n  return UpdateService.prototype._singletonInstance = initSocket();\n\n  /**\n   * Initialize instance\n   * @return {Promise} instance promise\n   */\n  function initSocket() {\n    return Backend.reset_individual(veda.ticket, 'cfg:ClientUpdateServicePort').then(function (ccusPortCfg) {\n      const ccusPort = ccusPortCfg['rdf:value'] && ccusPortCfg['rdf:value'][0].data;\n      const protocol = window.location.protocol === 'http:' ? 'ws:' : 'wss:';\n      const port = ccusPort || window.location.port;\n      const address = protocol + '//' + window.location.hostname + (port ? ':' + port : '') + '/ccus';\n      const socket = new WebSocket(address);\n\n      socket.onopen = openedHandler;\n      socket.onclose = closedHandler;\n      socket.onerror = errorHandler;\n      socket.onmessage = messageHandler;\n      socket.receiveMessage = receiveMessage;\n      socket.sendMessage = sendMessage;\n      self.socket = socket;\n      return self;\n    });\n  }\n\n  /**\n   * Send a message via socket\n   * @param {string} msg - message to send\n   * @this UpdateService\n   * @return {void}\n   */\n  function sendMessage (msg) {\n    const socket = this;\n    if (msg === '=' || msg === '-*' || msg.indexOf('ccus') === 0) {\n      if (socket.readyState === 1) {\n        socket.send(msg);\n        // console.log(\"client -> server:\", msg);\n      }\n      return;\n    }\n    buffer.push(msg);\n    if ( !socketTimeout ) {\n      socketTimeout = setTimeout(function () {\n        const message = buffer.join(',');\n        if (socket.readyState === 1) {\n          socket.send(message);\n          // console.log(\"client -> server:\", message);\n        }\n        buffer = [];\n        socketTimeout = undefined;\n      }, socketDelay);\n    }\n  }\n\n  /**\n   * Receive a message via socket\n   * @param {string} msg - received message\n   * @return {void}\n   */\n  function receiveMessage(msg) {\n    // console.log(\"server -> client:\", msg);\n    if (msg === '') {\n      lastPing = Date.now();\n      return;\n    }\n    let uris = msg.indexOf('=') === 0 ? msg.substr(1) : msg;\n    if (uris.length === 0) {\n      return;\n    }\n    uris = uris.split(',');\n    for (let i = 0; i < uris.length; i++) {\n      try {\n        const tmp = uris[i].split('=');\n        const uri = tmp[0];\n        if ( !uri ) {\n          continue;\n        }\n        const updateCounter = parseInt(tmp[1]);\n        const individual = new IndividualModel(uri);\n        if ( individual.hasValue('v-s:updateCounter', updateCounter) ) {\n          continue;\n        }\n        if (self.list[uri]) {\n          self.list[uri].updateCounter = updateCounter;\n        }\n        if (self.list[uri].action) {\n          self.list[uri].action.call(individual, updateCounter); // Call action\n        } else if (updateCounter !== 0) {\n          individual.reset(); // Default action\n        }\n      } catch (error) {\n        console.log('error: individual update service failed', error);\n      }\n    }\n  }\n\n  /**\n   * Socket opened handler\n   * @param {Event} event\n   * @this UpdateService\n   * @return {void}\n   */\n  function openedHandler(event) {\n    reconnectDelay = reconnectDelayInitial;\n    console.log('client: websocket opened', event.target.url);\n    this.sendMessage('ccus=' + veda.ticket);\n    self.restore();\n    veda.trigger('ccus-online');\n\n    pingInterval = setInterval(() => {\n      if (Date.now() - lastPing > 2 * pingTimeout) {\n        console.log('client: ping missed, close socket');\n        veda.trigger('ccus-offline');\n        clearInterval(pingInterval);\n        this.close();\n        return;\n      }\n    }, pingTimeout);\n  }\n\n  /**\n   * Message received handler\n   * @param {Event} event\n   * @this WebSocket\n   * @return {void}\n   */\n  function messageHandler(event) {\n    const msg = event.data;\n    this.receiveMessage(msg);\n  }\n\n  /**\n   * Socket error handler\n   * @param {Event} event\n   * @this WebSocket\n   * @return {void}\n   */\n  function errorHandler(event) {\n    console.log('client: ccus error', event);\n    this.close();\n  }\n\n  /**\n   * Socket closed handler\n   * @param {Event} event\n   * @return {void}\n   */\n  function closedHandler(event) {\n    reconnectDelay = reconnectDelay < reconnectDelayLimit ? reconnectDelay * reconnectDelayFactor : reconnectDelayLimit;\n    console.log('client: websocket closed', event.target.url, '| re-connect in', reconnectDelay / 1000, 'sec');\n    setTimeout(initSocket, reconnectDelay);\n    veda.trigger('ccus-offline');\n    clearInterval(pingInterval);\n  }\n};\n\nconst proto = UpdateService.prototype;\n\nproto.subscribe = function (uri, action) {\n  const self = this;\n  if ( this.list[uri] ) {\n    ++this.list[uri].subscribeCounter;\n  } else {\n    const individual = new IndividualModel(uri);\n    individual.load().then(function (individual) {\n      const updateCounter = individual.hasValue('v-s:updateCounter') ? individual.get('v-s:updateCounter')[0] : 0;\n      self.list[uri] = {\n        subscribeCounter: 1,\n        updateCounter: updateCounter,\n      };\n      if (action) {\n        self.list[uri].action = action;\n      }\n      self.socket.sendMessage('+' + uri + '=' + updateCounter);\n    });\n  }\n};\n\nproto.unsubscribe = function (uri) {\n  if ( !uri ) {\n    this.list = {};\n    this.socket.sendMessage('-*');\n  } else if ( this.list[uri] && this.list[uri].subscribeCounter > 1) {\n    --this.list[uri].subscribeCounter;\n  } else {\n    delete this.list[uri];\n    this.socket.sendMessage('-' + uri);\n  }\n};\n\nproto.restore = function () {\n  this.socket.sendMessage('-*');\n  for (const uri in this.list) {\n    if (Object.hasOwnProperty.call(this.list, uri)) {\n      this.socket.sendMessage('+' + uri + '=' + this.list[uri].updateCounter);\n    }\n  }\n};\n"],"file":"update_service.js"}