{"version":3,"sources":["../../../source-web/js/browser/local_db.js"],"names":["LocalDB","veda_version","veda","manifest","db_name","short_name","store_name","prototype","Promise","resolve","initDB","fallback","get","key","put","value","remove","result","proto","reject","openReq","window","indexedDB","open","onsuccess","event","db","target","console","log","onerror","error","onblocked","alert","onupgradeneeded","objectStoreNames","contains","deleteObjectStore","createObjectStore","request","transaction","objectStore"],"mappings":"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","sourcesContent":["// Local client database module\n\n'use strict';\n\nimport veda from '../common/veda.js';\n\nconst fallback = {\n  get: function (key) {\n    return Promise.resolve(this[key]);\n  },\n  put: function (key, value) {\n    this[key] = value;\n    return Promise.resolve(value);\n  },\n  remove: function (key) {\n    const result = delete this[key];\n    return Promise.resolve(result);\n  },\n};\n\nexport default LocalDB;\n\n/**\n * Local database singleton constructor\n * @return {Promise} database instance promise\n */\nfunction LocalDB() {\n  this.veda_version = veda.manifest.veda_version;\n  this.db_name = veda.manifest.short_name;\n  this.store_name = 'store';\n\n  // Singleton pattern\n  if (LocalDB.prototype[this.db_name + this.store_name]) {\n    return Promise.resolve(LocalDB.prototype[this.db_name + this.store_name]);\n  }\n\n  return LocalDB.prototype[this.db_name + this.store_name] = this.initDB();\n};\n\nconst proto = LocalDB.prototype;\n\n/**\n * Initialize database instance\n * @return {Promise} database instance promise\n */\nproto.initDB = function () {\n  return new Promise((resolve, reject) => {\n    const openReq = window.indexedDB.open(this.db_name, this.veda_version);\n\n    openReq.onsuccess = (event) => {\n      const db = event.target.result;\n      this.db = db;\n      console.log(`DB open success, veda_version = ${this.veda_version}`);\n      resolve(this);\n    };\n\n    openReq.onerror = (error) => {\n      console.log('DB open error', error);\n      reject(error);\n    };\n\n    openReq.onblocked = function(event) {\n      alert('Пожалуйста, закройте другие открытые вкладки системы! \\nPlease close all other open tabs with the system!');\n    };\n\n    openReq.onupgradeneeded = (event) => {\n      const db = event.target.result;\n      if (db.objectStoreNames.contains(this.store_name)) {\n        db.deleteObjectStore(this.store_name);\n        console.log(`DB store deleted: ${this.store_name}`);\n      }\n      db.createObjectStore(this.store_name);\n      console.log(`DB create success: ${this.store_name}, veda_version = ${this.veda_version}`);\n    };\n  }).catch((error) => {\n    console.log('IndexedDB error, using in-memory fallback.', error);\n    return fallback;\n  });\n};\n\nproto.get = function (key) {\n  return new Promise((resolve, reject) => {\n    const request = this.db.transaction([this.store_name], 'readonly').objectStore(this.store_name).get(key);\n    request.onerror = reject;\n    request.onsuccess = (event) => resolve(event.target.result);\n  });\n};\n\nproto.put = function (key, value) {\n  return new Promise((resolve, reject) => {\n    const request = this.db.transaction([this.store_name], 'readwrite').objectStore(this.store_name).put(value, key);\n    request.onerror = reject;\n    request.onsuccess = () => resolve(value);\n  });\n};\n\nproto.remove = function (key) {\n  return new Promise((resolve, reject) => {\n    const request = this.db.transaction([this.store_name], 'readwrite').objectStore(this.store_name).delete(key);\n    request.onerror = reject;\n    request.onsuccess = (event) => resolve(event.target.result);\n  });\n};\n\n"],"file":"local_db.js"}