{"version":3,"sources":["../../../source-web/js/common/app_model.js"],"names":["AppModel","manifest","riot","observable","ticket","ontology","cache","limit","count","delta","storage","expire","get","key","set","obj","expires","keys","Object","i","filter","id","length","console","log","expire_key","Date","now","push","window","updateService","UpdateService","then","subscribe","remove","item","unsubscribe","clear","init","user","OntologyModel","UserModel","_init"],"mappings":"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","sourcesContent":["// Veda application Model\n\nimport riot from '../common/lib/riot.js';\n\nimport OntologyModel from '../common/ontology_model.js';\n\nimport UserModel from '../common/user_model.js';\n\nimport UpdateService from '../browser/update_service.js';\n\n/**\n * Application model\n * @param {Object} manifest - app config\n * @return {AppModel}\n */\nexport default function AppModel(manifest) {\n  riot.observable(this);\n\n  this.manifest = manifest;\n  this.ticket = this.ticket || '';\n  this.ontology = {};\n  this.cache = {\n    limit: 20000,\n    count: 0,\n    delta: 1000,\n    storage: {},\n    expire: {},\n    get: function (key) {\n      return this.storage[key];\n    },\n    set: function (obj, expires) {\n      let count = this.count;\n      const limit = this.limit;\n      const delta = this.delta;\n      if ( count >= limit ) {\n        const keys = Object.keys(this.expire);\n        // First key is for ontology objects\n        for (let i = 1, key; (key = keys[i]) && (limit - count < delta); i++) {\n          this.expire[key] = this.expire[key].filter((obj) => {\n            if (limit - count >= delta) {\n              return true;\n            }\n            delete this.storage[obj.id];\n            count--;\n            return false;\n          });\n          if (this.expire[key].length === 0) {\n            delete this.expire[key];\n          }\n        }\n        this.count = count;\n        console.log('veda.cache limit (' + this.limit + ' elements) reached, ' + this.delta + ' removed.');\n      }\n      const expire_key = typeof expires === 'number' ? expires : Date.now();\n      obj.expires = expire_key;\n      this.storage[obj.id] = obj;\n      this.expire[expire_key] = this.expire[expire_key] || [];\n      this.expire[expire_key].push(obj);\n      this.count++;\n      if (typeof window !== 'undefined' && expire_key !== 1) {\n        const updateService = new UpdateService();\n        updateService.then(function (updateService) {\n          updateService.subscribe(obj.id);\n        });\n      }\n    },\n    remove: function (key) {\n      const obj = this.storage[key];\n      const expires = obj.expires;\n      this.expire[expires] = this.expire[expires].filter(function (item) {\n        return item.id !== key;\n      });\n      if (this.expire[expires].length === 0) {\n        delete this.expire[expires];\n      }\n      this.count--;\n      if (typeof window !== 'undefined') {\n        const updateService = new UpdateService();\n        updateService.then(function (updateService) {\n          updateService.unsubscribe(key);\n        });\n      }\n      return delete this.storage[key];\n    },\n    clear: function () {\n      this.count = 0;\n      this.storage = {};\n      this.expire = {};\n      if (typeof window !== 'undefined') {\n        const updateService = new UpdateService();\n        updateService.then(function (updateService) {\n          updateService.unsubscribe();\n        });\n      }\n    },\n  };\n\n  // Load ontology\n  this.init = function (user) {\n    const ontology = new OntologyModel();\n    return ontology.then((ontology) => {\n      this.ontology = ontology;\n      this.user = new UserModel(user);\n      return this.user._init();\n    });\n  };\n\n  return this;\n};\n"],"file":"app_model.js"}