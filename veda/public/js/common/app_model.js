"use strict";System.register(["../common/lib/riot.js","../common/ontology_model.js","../common/user_model.js","../browser/update_service.js"],function(a){"use strict";function b(a){return c.observable(this),this.manifest=a,this.ticket=this.ticket||"",this.ontology={},this.cache={limit:2e4,count:0,delta:1e3,storage:{},expire:{},get:function get(a){return this.storage[a]},set:function set(a,b){var c=this,d=this.count,e=this.limit,g=this.delta;if(d>=e){// First key is for ontology objects
for(var h,j=Object.keys(this.expire),k=1;(h=j[k])&&e-d<g;k++)this.expire[h]=this.expire[h].filter(function(a){return!!(e-d>=g)||(delete c.storage[a.id],d--,!1)}),0===this.expire[h].length&&delete this.expire[h];this.count=d,console.log("veda.cache limit ("+this.limit+" elements) reached, "+this.delta+" removed.")}var l="number"==typeof b?b:Date.now();if(a.expires=l,this.storage[a.id]=a,this.expire[l]=this.expire[l]||[],this.expire[l].push(a),this.count++,"undefined"!=typeof window&&1!==l){var m=new f;m.then(function(b){b.subscribe(a.id)})}},remove:function remove(a){var b=this.storage[a],c=b.expires;if(this.expire[c]=this.expire[c].filter(function(b){return b.id!==a}),0===this.expire[c].length&&delete this.expire[c],this.count--,"undefined"!=typeof window){var d=new f;d.then(function(b){b.unsubscribe(a)})}return delete this.storage[a]},clear:function clear(){if(this.count=0,this.storage={},this.expire={},"undefined"!=typeof window){var a=new f;a.then(function(a){a.unsubscribe()})}}},this.init=function(a){var b=this,c=new d;return c.then(function(c){return b.ontology=c,b.user=new e(a),b.user._init()})},this}var c,d,e,f;return a("default",b),{setters:[function(a){c=a.default},function(a){d=a.default},function(a){e=a.default},function(a){f=a.default}],execute:function(){}}});
//# sourceMappingURL=app_model.js.map